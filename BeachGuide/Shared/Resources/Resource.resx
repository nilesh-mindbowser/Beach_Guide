<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUscolumn" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="Albamaheading" xml:space="preserve">
    <value>Gulf Shores, Alabama</value>
  </data>
  <data name="Arealabel" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="Bathroominfo" xml:space="preserve">
    <value>2 Bathrooms</value>
  </data>
  <data name="BeachABuzzName" xml:space="preserve">
    <value>Beach a Buzz</value>
  </data>
  <data name="BeachBuzzCol" xml:space="preserve">
    <value>Beach Buzz</value>
  </data>
  <data name="BeachGuideMagazinCol" xml:space="preserve">
    <value>BeachGuide Magazine</value>
  </data>
  <data name="Bedroomcount" xml:space="preserve">
    <value>3 Bedroom</value>
  </data>
  <data name="cardtextdetails" xml:space="preserve">
    <value>Destin’s beautiful holiday isle is the setting for aegean, a...</value>
  </data>
  <data name="Checkinlabel" xml:space="preserve">
    <value>Check In</value>
  </data>
  <data name="CheckoutLabel" xml:space="preserve">
    <value>Check Out</value>
  </data>
  <data name="ConnectBeachGuideCol" xml:space="preserve">
    <value>Connect with BeachGuide</value>
  </data>
  <data name="ContactBeachCol" xml:space="preserve">
    <value>Contact BeachGuide</value>
  </data>
  <data name="DealsColumn" xml:space="preserve">
    <value>Deals</value>
  </data>
  <data name="DinnerInfo" xml:space="preserve">
    <value>Dinner</value>
  </data>
  <data name="Eventsinfo" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="FeedbackColumn" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="Fishinginfo" xml:space="preserve">
    <value>Fishing</value>
  </data>
  <data name="FooterInformation" xml:space="preserve">
    <value>Find beachfront vacation rentals along the beautiful white-sand beaches of the Alabama and Florida Gulf Coast.
                            Choose from condo rentals, cottages, vacation homes and hotels. Learn more about things to do in our beach destinations, and find information on dining, shopping, golf, fishing and attractions. Also be sure to join us on Facebook and Pinterest,
                            and join our email list to make sure you always get the latest news about events and special deals.</value>
  </data>
  <data name="GolfDetails" xml:space="preserve">
    <value>Golf</value>
  </data>
  <data name="Golfinfo" xml:space="preserve">
    <value>Golf</value>
  </data>
  <data name="GuestLabel" xml:space="preserve">
    <value>Guest</value>
  </data>
  <data name="GulfAlabamaHeading" xml:space="preserve">
    <value>Gulf Shores, Alabama</value>
  </data>
  <data name="GymInfo" xml:space="preserve">
    <value>Gym</value>
  </data>
  <data name="HomeColumn" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="InformationNavslide" xml:space="preserve">
    <value>Informations</value>
  </data>
  <data name="MoreInfoDetails" xml:space="preserve">
    <value>More Information</value>
  </data>
  <data name="OnlineMagazineCol" xml:space="preserve">
    <value>Online Magazine</value>
  </data>
  <data name="OtherThingstodoinfo" xml:space="preserve">
    <value>Other Things To Do</value>
  </data>
  <data name="pagiantionBox" xml:space="preserve">
    <value>Search has returned 100 results.</value>
  </data>
  <data name="peoplecount" xml:space="preserve">
    <value>5 People</value>
  </data>
  <data name="PoolInfo" xml:space="preserve">
    <value>Pool</value>
  </data>
  <data name="PrivacyPolicyCol" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="Propertiesinfo" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="PropertyLabel" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="Rentalunitinfo" xml:space="preserve">
    <value>Rental Units</value>
  </data>
  <data name="RentalunitLabel" xml:space="preserve">
    <value>Rental Unit</value>
  </data>
  <data name="ResortAdminCol" xml:space="preserve">
    <value>Resort Admin</value>
  </data>
  <data name="RestaurantsInfo" xml:space="preserve">
    <value>Restaurants</value>
  </data>
  <data name="RowCard1" xml:space="preserve">
    <value>\Images\card1.svg</value>
  </data>
  <data name="SelectBeachCol" xml:space="preserve">
    <value>Select a Beach</value>
  </data>
  <data name="SelectBeachname" xml:space="preserve">
    <value>Select a Beach</value>
  </data>
  <data name="SorByButton" xml:space="preserve">
    <value>Sort By:</value>
  </data>
  <data name="sortingBox" xml:space="preserve">
    <value>Property Name(A-Z)</value>
  </data>
  <data name="TermsConditionsCol" xml:space="preserve">
    <value>Terms and Conditions</value>
  </data>
  <data name="VacationpropHeading" xml:space="preserve">
    <value>Gulf Shores Alabama Vacation Properties</value>
  </data>
  <data name="WaterspaceHeading" xml:space="preserve">
    <value>Watersapce B618</value>
  </data>
  <data name="WishlistName" xml:space="preserve">
    <value>Wishlist</value>
  </data>
</root>